
ADD_CUSTOM_TARGET(depend)

### glm
MESSAGE("Adding dependency: glm")

SET(GLM_INCLUDE_DIRS "${CMAKE_CURRENT_LIST_DIR}/glm" PARENT_SCOPE)

ADD_CUSTOM_TARGET(glm)
ADD_DEPENDENCIES(depend glm)

### lua
MESSAGE("Adding dependency: lua")

SET(LUA_OPTIONS
)

SET(LUA_INCLUDE_DIRS
    "${CMAKE_CURRENT_SOURCE_DIR}/lua/src"
    "${CMAKE_BINARY_DIR}/depend/lua"
    PARENT_SCOPE
)

IF(MSVC)
    SET(LUA_OPTIONS
        -DLUA_BUILD_AS_DLL=OFF
        -DBUILD_SHARED_LIBS=OFF
    )
    SET(LUA_LIBRARIES_DEBUG "${CMAKE_BINARY_DIR}/depend/lua/Debug/lua.lib")
    SET(LUA_LIBRARIES_DEBUG "${LUA_LIBRARIES_DEBUG}" PARENT_SCOPE)
    SET(LUA_LIBRARIES_RELEASE "${CMAKE_BINARY_DIR}/depend/lua/Release/lua.lib")
    SET(LUA_LIBRARIES_RELEASE "${LUA_LIBRARIES_RELEASE}" PARENT_SCOPE)
ELSE()
    SET(LUA_LIBRARIES "${CMAKE_BINARY_DIR}/depend/lua/liblua.so")
    SET(LUA_LIBRARIES "${LUA_LIBRARIES}" PARENT_SCOPE)
ENDIF()

FILE(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/depend/lua)
EXECUTE_PROCESS(
    COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}"
        ${CMAKE_CURRENT_SOURCE_DIR}/lua ${LUA_OPTIONS}
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/lua
)

IF (MSVC)
    ADD_CUSTOM_COMMAND(
        OUTPUT ${LUA_LIBRARIES_DEBUG}
        COMMAND ${CMAKE_COMMAND} --build . --config Debug --target liblua
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/lua
    )
    ADD_CUSTOM_COMMAND(
        OUTPUT ${LUA_LIBRARIES_RELEASE}
        COMMAND ${CMAKE_COMMAND} --build . --config Release --target liblua
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/lua
    )
    ADD_CUSTOM_TARGET(lua DEPENDS ${LUA_LIBRARIES_DEBUG} ${LUA_LIBRARIES_RELEASE})
ELSE()
    ADD_CUSTOM_COMMAND(
        OUTPUT ${LUA_LIBRARIES}
        COMMAND ${CMAKE_COMMAND} --build . --target liblua
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/lua
    )
    ADD_CUSTOM_TARGET(lua DEPENDS ${LUA_LIBRARIES})
ENDIF()
ADD_DEPENDENCIES(depend lua)

### GLFW
MESSAGE("Adding dependency: glfw")

SET(GLFW_OPTIONS
    -DGLFW_BUILD_EXAMPLES=OFF
    -DGLFW_BUILD_TESTS=OFF
    -DGLFW_BUILD_DOCS=OFF
    -DGLFW_INSTALL=OFF
)

SET(GLFW_INCLUDE_DIRS
    "${CMAKE_CURRENT_SOURCE_DIR}/glfw/include"
    PARENT_SCOPE
)

IF(MSVC)
    SET(GLFW_LIBRARIES_DEBUG "${CMAKE_BINARY_DIR}/depend/glfw/src/Debug/glfw3.lib")
    SET(GLFW_LIBRARIES_DEBUG "${GLFW_LIBRARIES_DEBUG}" PARENT_SCOPE)
    SET(GLFW_LIBRARIES_RELEASE "${CMAKE_BINARY_DIR}/depend/glfw/src/Release/glfw3.lib")
    SET(GLFW_LIBRARIES_RELEASE "${GLFW_LIBRARIES_RELEASE}" PARENT_SCOPE)
ELSE()
    SET(GLFW_OPTIONS ${GLFW_OPTIONS} -DBUILD_SHARED_LIBS=ON)
    SET(GLFW_LIBRARIES "${CMAKE_BINARY_DIR}/depend/glfw/src/libglfw.so")
    SET(GLFW_LIBRARIES "${GLFW_LIBRARIES}" PARENT_SCOPE)
ENDIF()

FILE(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/depend/glfw)
EXECUTE_PROCESS(
    COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}"
        ${CMAKE_CURRENT_SOURCE_DIR}/glfw ${GLFW_OPTIONS}
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/glfw
)

IF (MSVC)
    ADD_CUSTOM_COMMAND(
        OUTPUT ${GLFW_LIBRARIES_DEBUG}
        COMMAND ${CMAKE_COMMAND} --build . --config Debug --target glfw
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/glfw
    )
    ADD_CUSTOM_COMMAND(
        OUTPUT ${GLFW_LIBRARIES_RELEASE}
        COMMAND ${CMAKE_COMMAND} --build . --config Release --target glfw
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/glfw
    )
    ADD_CUSTOM_TARGET(glfw DEPENDS ${GLFW_LIBRARIES_DEBUG} ${GLFW_LIBRARIES_RELEASE})
ELSE()
    ADD_CUSTOM_COMMAND(
        OUTPUT ${GLFW_LIBRARIES}
        COMMAND ${CMAKE_COMMAND} --build . --target glfw
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/depend/glfw
    )
    ADD_CUSTOM_TARGET(glfw DEPENDS ${GLFW_LIBRARIES})
ENDIF()
ADD_DEPENDENCIES(depend glfw)

SET_TARGET_PROPERTIES(
    depend glm lua glfw
    PROPERTIES FOLDER "depend"
)
